// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  COLLABORATOR
  ADMIN
}

model User {
  id       Int    @id @unique
  name     String
  email    String @unique
  password String
  role     Role   @default(USER)

  // Relations
  vehicles Vehicle[]

  tickets Ticket[]
}

model Vehicle {
  id           String @id @unique @default(uuid())
  licensePlate String
  description  String

  // Relations
  users   User[]
  tickets Ticket[]
}

model Collaborator {
  id       Int    @id @unique
  name     String
  email    String @unique
  password String
  role     Role   @default(COLLABORATOR)

  tickets Ticket[]
}

model Ticket {
  id       String    @id @unique @default(uuid())
  checkIn  DateTime  @default(now()) @db.Timestamptz(3)
  checkOut DateTime?
  isDelete Boolean   @default(false)

  userId Int
  user   User @relation(fields: [userId], references: [id])

  collaborators Collaborator[]

  vehicleId String
  vehicle   Vehicle @relation(fields: [vehicleId], references: [id])

  parkingId String
  parking   Parking @relation(fields: [parkingId], references: [id])
}

model Parking {
  id        String  @id @unique
  available Boolean @default(true)

  tickets Ticket[]
}
